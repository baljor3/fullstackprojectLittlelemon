{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bobby\\\\Desktop\\\\projects\\\\Coursera\\\\fullstack\\\\fullstackprojectLittlelemon\\\\frontendlittlelemon\\\\src\\\\Sectionfiles\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [username, setUserName] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [errorUser, setErrorUser] = useState();\n  const [errorEmail, setErrorEmail] = useState();\n  const addUser = async (username, email, password) => {\n    await fetch('http://localhost:8080/api/logininsert', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"username\": username,\n        \"email\": email,\n        \"password\": password\n      }),\n      headers: {\n        'Content-type': 'application/json'\n      },\n      mode: \"cors\"\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n    });\n  };\n  const checkUserName = (username, bool) => {\n    bool = false;\n    if (username.length < 4) {\n      setErrorUser(\"Username is too short\");\n      return bool = true;\n    } else {\n      setErrorUser(\"\");\n    }\n  };\n  const checkEmail = (email, bool) => {\n    const e = email.value.trim();\n    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    if (!emailRegex.test(e)) {\n      setErrorEmail(\"Incorrect Email format\");\n    } else {\n      setErrorEmail(\"\");\n    }\n  };\n  const submitdata = () => {\n    const bool = false;\n    checkUserName(username, bool);\n    checkEmail(email, bool);\n    if (bool === true) {\n      return;\n    }\n    addUser(username, email, password);\n    alert(\"the data was added\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: {\n      \"display\": 'grid',\n      \"max-width\": 200,\n      \"gap\": 20\n    },\n    onSubmit: submitdata,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"username\",\n      onChange: e => setUserName(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"error\",\n      style: \"color: red;\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"password\",\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"ysXBDBKM113ZkxKKp4qHK8Jenx8=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","_s","username","setUserName","email","setEmail","password","setPassword","errorUser","setErrorUser","errorEmail","setErrorEmail","addUser","fetch","method","body","JSON","stringify","headers","mode","then","res","json","data","console","log","checkUserName","bool","length","checkEmail","e","value","trim","emailRegex","test","submitdata","alert","style","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","target","required","error","type","_c","$RefreshReg$"],"sources":["C:/Users/bobby/Desktop/projects/Coursera/fullstack/fullstackprojectLittlelemon/frontendlittlelemon/src/Sectionfiles/Register.js"],"sourcesContent":["import React, {useState} from \"react\";\r\n\r\n\r\nconst Register = () => {\r\n    const [username, setUserName] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [errorUser, setErrorUser] = useState();\r\n    const [errorEmail, setErrorEmail] = useState();\r\n\r\n    const addUser = async(username,email,password) =>{\r\n        await fetch('http://localhost:8080/api/logininsert',{\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n               \"username\": username,\r\n               \"email\": email,\r\n               \"password\":password,\r\n            }),\r\n            headers: {\r\n               'Content-type': 'application/json',\r\n            },\r\n            mode :\"cors\",\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n              console.log(data);\r\n            })\r\n        }\r\n        \r\n    const checkUserName = (username,bool) => {\r\n        bool = false;\r\n        if(username.length < 4){\r\n            setErrorUser(\"Username is too short\")\r\n            return bool = true;\r\n        }\r\n        else{\r\n            setErrorUser(\"\")\r\n        }\r\n    }\r\n\r\n    const checkEmail = (email,bool) => {\r\n\r\n        const e = email.value.trim();\r\n        const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n\r\n        if (!emailRegex.test(e)) {\r\n            setErrorEmail(\"Incorrect Email format\")\r\n        }else{\r\n            setErrorEmail(\"\")\r\n        }\r\n\r\n    }\r\n\r\n    const submitdata =()=>{\r\n        const bool = false;\r\n        checkUserName(username,bool)\r\n        checkEmail(email,bool)\r\n        if(bool === true){\r\n            return;\r\n        }\r\n        addUser(username,email,password)\r\n        alert(\"the data was added\")\r\n    }\r\n    return(\r\n    <form style={{\"display\": 'grid', \"max-width\": 200, \"gap\": 20}} onSubmit={submitdata}>\r\n            <label>Username</label>\r\n            <input id = \"username\"\r\n            onChange={(e)=> setUserName(e.target.value)}\r\n            required></input>\r\n            <span id=\"error\" style=\"color: red;\">{error}</span>\r\n\r\n            <label>Email</label>\r\n            <input id =\"email\"\r\n            onChange={(e)=> setEmail(e.target.value)}></input>\r\n\r\n            <label>Password</label>\r\n            <input id=\"password\"\r\n            onChange={(e)=> setPassword(e.target.value)}></input>\r\n\r\n            <button type=\"submit\">Register</button>\r\n            <button>Login</button>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}