{"ast":null,"code":"// src/wrap.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { Children, useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Wrap = forwardRef(function Wrap2(props, ref) {\n  const {\n    spacing = \"0.5rem\",\n    spacingX,\n    spacingY,\n    children,\n    justify,\n    direction,\n    align,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props;\n  const _children = useMemo(() => shouldWrapChildren ? Children.map(children, (child, index) => /* @__PURE__ */jsx(WrapItem, {\n    children: child\n  }, index)) : children, [children, shouldWrapChildren]);\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    className: cx(\"chakra-wrap\", className),\n    ...rest,\n    children: /* @__PURE__ */jsx(chakra.ul, {\n      className: \"chakra-wrap__list\",\n      __css: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: justify,\n        alignItems: align,\n        flexDirection: direction,\n        listStyleType: \"none\",\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        padding: \"0\"\n      },\n      children: _children\n    })\n  });\n});\nWrap.displayName = \"Wrap\";\nvar WrapItem = forwardRef(function WrapItem2(props, ref) {\n  const {\n    className,\n    ...rest\n  } = props;\n  return /* @__PURE__ */jsx(chakra.li, {\n    ref,\n    __css: {\n      display: \"flex\",\n      alignItems: \"flex-start\"\n    },\n    className: cx(\"chakra-wrap__listitem\", className),\n    ...rest\n  });\n});\nWrapItem.displayName = \"WrapItem\";\nexport { Wrap, WrapItem };","map":{"version":3,"names":["cx","chakra","forwardRef","Children","useMemo","jsx","Wrap","Wrap2","props","ref","spacing","spacingX","spacingY","children","justify","direction","align","className","shouldWrapChildren","rest","_children","map","child","index","WrapItem","div","ul","__css","display","flexWrap","justifyContent","alignItems","flexDirection","listStyleType","gap","columnGap","rowGap","padding","displayName","WrapItem2","li"],"sources":["C:/Users/bobby/Desktop/projects/Coursera/fullstack/fullstackprojectLittlelemon/frontendlittlelemon/node_modules/@chakra-ui/layout/dist/chunk-RVTQGZYH.mjs"],"sourcesContent":["// src/wrap.tsx\r\nimport { cx } from \"@chakra-ui/shared-utils\";\r\nimport {\r\n  chakra,\r\n  forwardRef\r\n} from \"@chakra-ui/system\";\r\nimport { Children, useMemo } from \"react\";\r\nimport { jsx } from \"react/jsx-runtime\";\r\nvar Wrap = forwardRef(function Wrap2(props, ref) {\r\n  const {\r\n    spacing = \"0.5rem\",\r\n    spacingX,\r\n    spacingY,\r\n    children,\r\n    justify,\r\n    direction,\r\n    align,\r\n    className,\r\n    shouldWrapChildren,\r\n    ...rest\r\n  } = props;\r\n  const _children = useMemo(\r\n    () => shouldWrapChildren ? Children.map(children, (child, index) => /* @__PURE__ */ jsx(WrapItem, { children: child }, index)) : children,\r\n    [children, shouldWrapChildren]\r\n  );\r\n  return /* @__PURE__ */ jsx(chakra.div, { ref, className: cx(\"chakra-wrap\", className), ...rest, children: /* @__PURE__ */ jsx(\r\n    chakra.ul,\r\n    {\r\n      className: \"chakra-wrap__list\",\r\n      __css: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: justify,\r\n        alignItems: align,\r\n        flexDirection: direction,\r\n        listStyleType: \"none\",\r\n        gap: spacing,\r\n        columnGap: spacingX,\r\n        rowGap: spacingY,\r\n        padding: \"0\"\r\n      },\r\n      children: _children\r\n    }\r\n  ) });\r\n});\r\nWrap.displayName = \"Wrap\";\r\nvar WrapItem = forwardRef(function WrapItem2(props, ref) {\r\n  const { className, ...rest } = props;\r\n  return /* @__PURE__ */ jsx(\r\n    chakra.li,\r\n    {\r\n      ref,\r\n      __css: { display: \"flex\", alignItems: \"flex-start\" },\r\n      className: cx(\"chakra-wrap__listitem\", className),\r\n      ...rest\r\n    }\r\n  );\r\n});\r\nWrapItem.displayName = \"WrapItem\";\r\n\r\nexport {\r\n  Wrap,\r\n  WrapItem\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,EAAE,QAAQ,yBAAyB;AAC5C,SACEC,MAAM,EACNC,UAAU,QACL,mBAAmB;AAC1B,SAASC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AACzC,SAASC,GAAG,QAAQ,mBAAmB;AACvC,IAAIC,IAAI,GAAGJ,UAAU,CAAC,SAASK,KAAKA,CAACC,KAAK,EAAEC,GAAG,EAAE;EAC/C,MAAM;IACJC,OAAO,GAAG,QAAQ;IAClBC,QAAQ;IACRC,QAAQ;IACRC,QAAQ;IACRC,OAAO;IACPC,SAAS;IACTC,KAAK;IACLC,SAAS;IACTC,kBAAkB;IAClB,GAAGC;EACL,CAAC,GAAGX,KAAK;EACT,MAAMY,SAAS,GAAGhB,OAAO,CACvB,MAAMc,kBAAkB,GAAGf,QAAQ,CAACkB,GAAG,CAACR,QAAQ,EAAE,CAACS,KAAK,EAAEC,KAAK,KAAK,eAAgBlB,GAAG,CAACmB,QAAQ,EAAE;IAAEX,QAAQ,EAAES;EAAM,CAAC,EAAEC,KAAK,CAAC,CAAC,GAAGV,QAAQ,EACzI,CAACA,QAAQ,EAAEK,kBAAkB,CAC/B,CAAC;EACD,OAAO,eAAgBb,GAAG,CAACJ,MAAM,CAACwB,GAAG,EAAE;IAAEhB,GAAG;IAAEQ,SAAS,EAAEjB,EAAE,CAAC,aAAa,EAAEiB,SAAS,CAAC;IAAE,GAAGE,IAAI;IAAEN,QAAQ,EAAE,eAAgBR,GAAG,CAC3HJ,MAAM,CAACyB,EAAE,EACT;MACET,SAAS,EAAE,mBAAmB;MAC9BU,KAAK,EAAE;QACLC,OAAO,EAAE,MAAM;QACfC,QAAQ,EAAE,MAAM;QAChBC,cAAc,EAAEhB,OAAO;QACvBiB,UAAU,EAAEf,KAAK;QACjBgB,aAAa,EAAEjB,SAAS;QACxBkB,aAAa,EAAE,MAAM;QACrBC,GAAG,EAAExB,OAAO;QACZyB,SAAS,EAAExB,QAAQ;QACnByB,MAAM,EAAExB,QAAQ;QAChByB,OAAO,EAAE;MACX,CAAC;MACDxB,QAAQ,EAAEO;IACZ,CACF;EAAE,CAAC,CAAC;AACN,CAAC,CAAC;AACFd,IAAI,CAACgC,WAAW,GAAG,MAAM;AACzB,IAAId,QAAQ,GAAGtB,UAAU,CAAC,SAASqC,SAASA,CAAC/B,KAAK,EAAEC,GAAG,EAAE;EACvD,MAAM;IAAEQ,SAAS;IAAE,GAAGE;EAAK,CAAC,GAAGX,KAAK;EACpC,OAAO,eAAgBH,GAAG,CACxBJ,MAAM,CAACuC,EAAE,EACT;IACE/B,GAAG;IACHkB,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEG,UAAU,EAAE;IAAa,CAAC;IACpDd,SAAS,EAAEjB,EAAE,CAAC,uBAAuB,EAAEiB,SAAS,CAAC;IACjD,GAAGE;EACL,CACF,CAAC;AACH,CAAC,CAAC;AACFK,QAAQ,CAACc,WAAW,GAAG,UAAU;AAEjC,SACEhC,IAAI,EACJkB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}