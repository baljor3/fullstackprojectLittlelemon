{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\baljo\\\\OneDrive\\\\Desktop\\\\projects\\\\fullstacklittlelemon\\\\frontendlittlelemon\\\\src\\\\Sectionfiles\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [username, setUserName] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [errorUser, setErrorUser] = useState();\n  const [errorEmail, setErrorEmail] = useState();\n  const [errorPass, setErrorPass] = useState();\n  const addUser = async (username, email, password) => {\n    await fetch('http://localhost:8080/api/logininsert', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"username\": username,\n        \"email\": email,\n        \"password\": password\n      }),\n      headers: {\n        'Content-type': 'application/json'\n      },\n      mode: \"cors\"\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n    });\n  };\n  function hasWhiteSpace(str) {\n    var b = false;\n    for (let i = 0; i < str.length; i++) {\n      if (str[i] === ' ' || str[i] === '\\t' || str[i] === '\\n' || str[i] === '\\r') {\n        return b = true; // Found a white space character\n      }\n    }\n\n    return false; // No white space character found\n  }\n\n  const checkUserName = user => {\n    console.log(user);\n    var bool = false;\n    bool = hasWhiteSpace(user);\n    if (bool === true) {\n      setErrorPass(\"there is whitespace in your username\");\n      return bool = true;\n    }\n    console.log(\"before loop\");\n    if (user.length < 4) {\n      setErrorUser(\"Username is too short\");\n      return true;\n    } else {\n      setErrorUser(\"\");\n    }\n  };\n  const checkEmail = email => {\n    var bool = false;\n    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    bool = hasWhiteSpace(email);\n    if (bool === true) {\n      setErrorPass(\"there is whitespace in your email\");\n      return bool = true;\n    }\n    if (!emailRegex.test(email)) {\n      setErrorEmail(\"Incorrect Email format\");\n      return bool = true;\n    } else {\n      setErrorEmail(\"\");\n    }\n  };\n  const checkPassword = p => {\n    var bool = false;\n    bool = hasWhiteSpace(p);\n    if (bool === true) {\n      setErrorPass(\"there is whitespace in your password\");\n      return bool = true;\n    }\n    if (p.length < 4) {\n      setErrorPass(\"Password too short\");\n      return bool = true;\n    } else {\n      setErrorPass(\"\");\n    }\n  };\n  const submitdata = e => {\n    e.preventDefault();\n    console.log(username);\n    var bool = false;\n    bool = checkUserName(username);\n    bool = checkEmail(email);\n    bool = checkPassword(password);\n    if (bool === true) {\n      return;\n    }\n    addUser(username, email, password);\n    alert(\"the data was added\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: {\n      \"display\": 'grid',\n      \"max-width\": 200,\n      \"gap\": 20\n    },\n    onSubmit: submitdata,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"username\",\n      onChange: e => setUserName(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"  \", errorUser, \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"  \", errorEmail, \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"password\",\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"  \", errorPass, \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"RhYVY44jLg02AetOGofRKa5y2C4=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","_s","username","setUserName","email","setEmail","password","setPassword","errorUser","setErrorUser","errorEmail","setErrorEmail","errorPass","setErrorPass","addUser","fetch","method","body","JSON","stringify","headers","mode","then","res","json","data","console","log","hasWhiteSpace","str","b","i","length","checkUserName","user","bool","checkEmail","emailRegex","test","checkPassword","p","submitdata","e","preventDefault","alert","style","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","target","value","required","type","_c","$RefreshReg$"],"sources":["C:/Users/baljo/OneDrive/Desktop/projects/fullstacklittlelemon/frontendlittlelemon/src/Sectionfiles/Register.js"],"sourcesContent":["import React, {useState} from \"react\";\r\n\r\n\r\nconst Register = () => {\r\n    const [username, setUserName] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [errorUser, setErrorUser] = useState();\r\n    const [errorEmail, setErrorEmail] = useState();\r\n    const [errorPass, setErrorPass] = useState();\r\n\r\n    const addUser = async(username,email,password) =>{\r\n        await fetch('http://localhost:8080/api/logininsert',{\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n               \"username\": username,\r\n               \"email\": email,\r\n               \"password\":password,\r\n            }),\r\n            headers: {\r\n               'Content-type': 'application/json',\r\n            },\r\n            mode :\"cors\",\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n              console.log(data);\r\n            })\r\n        }\r\n\r\n    function hasWhiteSpace(str) {\r\n        var b = false;\r\n            for (let i = 0; i < str.length; i++) {\r\n              if (str[i] === ' ' || str[i] === '\\t' || str[i] === '\\n' || str[i] === '\\r') {\r\n                return b = true; // Found a white space character\r\n            }\r\n        }\r\n        return false; // No white space character found\r\n    }\r\n        \r\n    const checkUserName = (user) => {\r\n        console.log(user)\r\n        var bool = false;\r\n        bool = hasWhiteSpace(user)\r\n        if(bool === true){\r\n            setErrorPass(\"there is whitespace in your username\")\r\n            return bool = true;\r\n        }\r\n        console.log(\"before loop\")\r\n        if(user.length < 4){\r\n            \r\n            setErrorUser(\"Username is too short\")\r\n            return true;\r\n        }\r\n        else{\r\n            setErrorUser(\"\")\r\n        }\r\n    }\r\n\r\n    const checkEmail = (email) => {\r\n        var bool = false;\r\n        \r\n        const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n\r\n        bool = hasWhiteSpace(email)\r\n        if(bool === true){\r\n            setErrorPass(\"there is whitespace in your email\")\r\n            return bool = true;\r\n        }\r\n\r\n        if (!emailRegex.test(email)) {\r\n            setErrorEmail(\"Incorrect Email format\")\r\n            return bool = true;\r\n        }else{\r\n            setErrorEmail(\"\")\r\n        }\r\n\r\n    }\r\n\r\n    const checkPassword = (p) => {\r\n        var bool = false;\r\n        bool = hasWhiteSpace(p)\r\n        if(bool === true){\r\n            setErrorPass(\"there is whitespace in your password\")\r\n            return bool = true;\r\n        }\r\n\r\n        if(p.length < 4){\r\n            setErrorPass(\"Password too short\")\r\n            return bool = true;\r\n        }else{\r\n            setErrorPass(\"\")\r\n        }\r\n    }\r\n\r\n    const submitdata =(e)=>{\r\n        e.preventDefault();\r\n        console.log(username)\r\n        var bool = false;\r\n        bool =checkUserName(username)\r\n        bool =checkEmail(email)\r\n        bool = checkPassword(password)\r\n        if(bool === true){\r\n            return;\r\n        }\r\n        addUser(username,email,password)\r\n        alert(\"the data was added\")\r\n    }\r\n\r\n    return(\r\n    <form style={{\"display\": 'grid', \"max-width\": 200, \"gap\": 20}} onSubmit={submitdata}>\r\n            <label>Username</label>\r\n            <input id = \"username\"\r\n            onChange={(e)=> setUserName(e.target.value)}\r\n            required></input>\r\n            <span >  {errorUser}  </span>\r\n\r\n            <label>Email</label>\r\n            <input id =\"email\"\r\n            onChange={(e)=> setEmail(e.target.value)}></input>\r\n            <span  >  {errorEmail}  </span>\r\n\r\n            <label>Password</label>\r\n            <input id=\"password\"\r\n            onChange={(e)=> setPassword(e.target.value)}></input>\r\n            <span >  {errorPass}  </span>\r\n\r\n\r\n            <button type=\"submit\">Register</button>\r\n            <button>Login</button>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}