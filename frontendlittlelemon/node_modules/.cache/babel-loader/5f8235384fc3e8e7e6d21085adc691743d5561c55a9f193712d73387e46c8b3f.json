{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bobby\\\\Desktop\\\\projects\\\\Coursera\\\\fullstack\\\\fullstackprojectLittlelemon\\\\frontendlittlelemon\\\\src\\\\Sectionfiles\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [username, setUserName] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const addUser = async (username, email, password) => {\n    await fetch('http://localhost:8080/api/logininsert', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"username\": username,\n        \"email\": email,\n        \"password\": password\n      }),\n      headers: {\n        'Content-type': 'application/json'\n      },\n      mode: \"cors\"\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n    });\n  };\n  const submitdata = event => {\n    event.preventDefault();\n    addUser(username, email, password);\n    alert(\"the data was added\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: {\n      \"display\": 'grid',\n      \"max-width\": 200,\n      \"gap\": 20\n    },\n    onSubmit: submitdata(),\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"username\",\n      onChange: e => setUserName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"password\",\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"koGph/VtioIo+uaulvWf6xKivr0=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","_s","username","setUserName","email","setEmail","password","setPassword","addUser","fetch","method","body","JSON","stringify","headers","mode","then","res","json","data","console","log","submitdata","event","preventDefault","alert","style","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","e","target","value","type","_c","$RefreshReg$"],"sources":["C:/Users/bobby/Desktop/projects/Coursera/fullstack/fullstackprojectLittlelemon/frontendlittlelemon/src/Sectionfiles/Register.js"],"sourcesContent":["import React, {useState} from \"react\";\r\n\r\n\r\n\r\n\r\n\r\nconst Register = () => {\r\n    const [username, setUserName] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    const addUser = async(username,email,password) =>{\r\n        await fetch('http://localhost:8080/api/logininsert',{\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n               \"username\": username,\r\n               \"email\": email,\r\n               \"password\":password,\r\n            }),\r\n            headers: {\r\n               'Content-type': 'application/json',\r\n            },\r\n            mode :\"cors\",\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n              console.log(data);\r\n            })\r\n        }\r\n        \r\n    const submitdata =(event)=>{\r\n        event.preventDefault();\r\n        addUser(username,email,password)\r\n        alert(\"the data was added\")\r\n    }\r\n    return(\r\n    <form style={{\"display\": 'grid', \"max-width\": 200, \"gap\": 20}} onSubmit={submitdata()}>\r\n            <label>Username</label>\r\n            <input id = \"username\"\r\n            onChange={(e)=> setUserName(e.target.value)}></input>\r\n\r\n            <label>Email</label>\r\n            <input id =\"email\"\r\n            onChange={(e)=> setEmail(e.target.value)}></input>\r\n\r\n            <label>Password</label>\r\n            <input id=\"password\"\r\n            onChange={(e)=> setPassword(e.target.value)}></input>\r\n\r\n            <button type=\"submit\">Register</button>\r\n            <button>Login</button>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default Register;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMtC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,CAAC;EAC1C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC;EACpC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAE1C,MAAMW,OAAO,GAAG,MAAAA,CAAMN,QAAQ,EAACE,KAAK,EAACE,QAAQ,KAAI;IAC7C,MAAMG,KAAK,CAAC,uCAAuC,EAAC;MAChDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAClB,UAAU,EAAEX,QAAQ;QACpB,OAAO,EAAEE,KAAK;QACd,UAAU,EAACE;MACd,CAAC,CAAC;MACFQ,OAAO,EAAE;QACN,cAAc,EAAE;MACnB,CAAC;MACDC,IAAI,EAAE;IACN,CAAC,CAAC,CACDC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC;EACN,CAAC;EAEL,MAAMG,UAAU,GAAGC,KAAK,IAAG;IACvBA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBhB,OAAO,CAACN,QAAQ,EAACE,KAAK,EAACE,QAAQ,CAAC;IAChCmB,KAAK,CAAC,oBAAoB,CAAC;EAC/B,CAAC;EACD,oBACA1B,OAAA;IAAM2B,KAAK,EAAE;MAAC,SAAS,EAAE,MAAM;MAAE,WAAW,EAAE,GAAG;MAAE,KAAK,EAAE;IAAE,CAAE;IAACC,QAAQ,EAAEL,UAAU,CAAC,CAAE;IAAAM,QAAA,gBAC9E7B,OAAA;MAAA6B,QAAA,EAAO;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACvBjC,OAAA;MAAOkC,EAAE,EAAG,UAAU;MACtBC,QAAQ,EAAGC,CAAC,IAAIhC,WAAW,CAACgC,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAErDjC,OAAA;MAAA6B,QAAA,EAAO;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACpBjC,OAAA;MAAOkC,EAAE,EAAE,OAAO;MAClBC,QAAQ,EAAGC,CAAC,IAAI9B,QAAQ,CAAC8B,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAElDjC,OAAA;MAAA6B,QAAA,EAAO;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACvBjC,OAAA;MAAOkC,EAAE,EAAC,UAAU;MACpBC,QAAQ,EAAGC,CAAC,IAAI5B,WAAW,CAAC4B,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAErDjC,OAAA;MAAQuC,IAAI,EAAC,QAAQ;MAAAV,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvCjC,OAAA;MAAA6B,QAAA,EAAQ;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEX,CAAC;AAAA/B,EAAA,CA/CKD,QAAQ;AAAAuC,EAAA,GAARvC,QAAQ;AAiDd,eAAeA,QAAQ;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}