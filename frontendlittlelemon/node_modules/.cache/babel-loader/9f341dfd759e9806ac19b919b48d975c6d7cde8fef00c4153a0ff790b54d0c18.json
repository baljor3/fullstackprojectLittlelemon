{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\baljo\\\\OneDrive\\\\Desktop\\\\projects\\\\fullstacklittlelemon\\\\frontendlittlelemon\\\\src\\\\Sectionfiles\\\\Review.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport greek from \"../asset/greek salad.jpg\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Review = () => {\n  _s();\n  const [review, setReview] = useState();\n  const [rating, setRating] = useState(1);\n  const [reviewArray, setReviewArray] = useState([]);\n  const jwtToken = Cookies.get('jwt_authorization');\n  useEffect(() => {\n    // Define a function to fetch reviews\n    const fetchReviews = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/api/getReviews', {\n          method: 'POST',\n          body: JSON.stringify({\n            productid: '1'\n          }),\n          headers: {\n            'Content-type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setReviewArray(data);\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    };\n\n    // Call the fetchReviews function when the component mounts\n    fetchReviews();\n  }, []); // The empty dependency array ensures this runs only on component mount\n\n  const writeReview = async (rating, review) => {\n    await fetch('http://localhost:8080/api/writeReview', {\n      method: \"POST\",\n      body: JSON.stringify({\n        rating: rating,\n        description: review,\n        productid: \"1\"\n      }),\n      headers: {\n        \"token\": jwtToken,\n        'Content-type': 'application/json'\n      }\n    }).then(data => {\n      console.log(data);\n      console.log(reviewArray);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const ratingSelection = [{\n    name: \"1\",\n    value: \"1\"\n  }, {\n    name: \"2\",\n    value: \"2\"\n  }, {\n    name: \"3\",\n    value: \"3\"\n  }, {\n    name: \"4\",\n    value: \"4\"\n  }, {\n    name: \"5\",\n    value: \"5\"\n  }];\n  const fun = e => {\n    writeReview(rating, review);\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: greek,\n      alt: \"Greek Salad\",\n      height: \"500px\",\n      width: \"500px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The famous greek salad of crispy lettuce, peppers, olives and our Chicago style feta cheese, garnished with crunchy garlic and rosemary croutons.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: fun,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"rating\",\n        onChange: e => {\n          setRating(e.target.value);\n        },\n        children: ratingSelection.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.name,\n            children: item.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"4\",\n        cols: \"50\",\n        onChange: e => {\n          setReview(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add a Review!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: reviewArray.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [item.name, \" \", item.description, \" \", item.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 1\n  }, this);\n};\n_s(Review, \"eiBQpInXB6LKOrQlEUztJWKqxQs=\");\n_c = Review;\nexport default Review;\nvar _c;\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"names":["React","useEffect","useState","greek","Cookies","jsxDEV","_jsxDEV","Review","_s","review","setReview","rating","setRating","reviewArray","setReviewArray","jwtToken","get","fetchReviews","response","fetch","method","body","JSON","stringify","productid","headers","ok","Error","data","json","error","console","writeReview","description","then","log","catch","ratingSelection","name","value","fun","e","preventDefault","children","src","alt","height","width","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","target","map","item","rows","cols","_c","$RefreshReg$"],"sources":["C:/Users/baljo/OneDrive/Desktop/projects/fullstacklittlelemon/frontendlittlelemon/src/Sectionfiles/Review.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport greek from \"../asset/greek salad.jpg\"\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst Review = ()=>{\r\n\r\n    const [review, setReview] = useState()\r\n    const [rating, setRating] = useState(1)\r\n    const [reviewArray, setReviewArray] = useState([])\r\n\r\n    const jwtToken = Cookies.get('jwt_authorization')\r\n\r\n    useEffect(() => {\r\n        // Define a function to fetch reviews\r\n        const fetchReviews = async () => {\r\n          try {\r\n            const response = await fetch('http://localhost:8080/api/getReviews', {\r\n              method: 'POST',\r\n              body: JSON.stringify({\r\n                productid: '1'\r\n              }),\r\n              headers: {\r\n                'Content-type': 'application/json'\r\n              }\r\n            });\r\n    \r\n            if (!response.ok) {\r\n              throw new Error('Network response was not ok');\r\n            }\r\n    \r\n            const data = await response.json();\r\n            setReviewArray(data);\r\n          } catch (error) {\r\n            console.error('Error fetching reviews:', error);\r\n          }\r\n        };\r\n    \r\n        // Call the fetchReviews function when the component mounts\r\n        fetchReviews();\r\n      }, []); // The empty dependency array ensures this runs only on component mount\r\n    \r\n\r\n\r\nconst writeReview = async(rating,review)=>{\r\n    await fetch('http://localhost:8080/api/writeReview',{\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n        rating: rating,\r\n        description: review,\r\n        productid: \"1\"\r\n    }),headers:{\r\n        \"token\":jwtToken,\r\n        'Content-type':'application/json'\r\n    }\r\n    })\r\n    .then((data)=>{\r\n        console.log(data)\r\n        console.log(reviewArray)\r\n    }).catch((error)=>{\r\n        console.log(error)\r\n    })\r\n}\r\n\r\nconst ratingSelection = [\r\n    {\r\n        name:\"1\",\r\n        value: \"1\"\r\n    },\r\n    {\r\n        name:\"2\",\r\n        value:\"2\"\r\n    },\r\n    {\r\n        name:\"3\",\r\n        value:\"3\"\r\n    },\r\n    {\r\n        name:\"4\",\r\n        value:\"4\"\r\n    },\r\n    {\r\n        name:\"5\",\r\n        value:\"5\"\r\n    }\r\n]\r\n\r\n\r\nconst fun = (e)=>{\r\n\r\n    writeReview(rating,review)\r\n    e.preventDefault();\r\n}\r\n\r\nreturn(\r\n<main>\r\n    <img src = {greek} alt = \"Greek Salad\" height=\"500px\" width=\"500px\"></img>\r\n    <p>The famous greek salad of crispy lettuce, peppers, olives and our Chicago style feta cheese, garnished with crunchy garlic and rosemary croutons.</p>\r\n\r\n    <form onSubmit={fun}>\r\n    <select name = \"rating\" onChange={(e)=>{setRating(e.target.value)}}>\r\n        {ratingSelection.map((item)=>{\r\n            return(<option value={item.name}>{item.value}</option>)\r\n        })}\r\n    </select>\r\n    <textarea rows=\"4\" cols = \"50\" onChange={(e)=>{setReview(e.target.value)}}></textarea>\r\n    <button>Add a Review!</button>\r\n    </form>\r\n\r\n    <div>\r\n       {reviewArray.map((item)=>{\r\n        return(<div>\r\n            {item.name} {item.description} {item.rating}\r\n        </div>)\r\n       })}\r\n    </div>\r\n   \r\n\r\n</main>)\r\n\r\n}\r\n\r\nexport default Review"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}